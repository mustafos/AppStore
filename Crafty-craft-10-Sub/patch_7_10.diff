From 43fdd495396901e5dffa97cf9921015fac42818c Mon Sep 17 00:00:00 2001
From: VitalyPolezhay <>
Date: Thu, 7 Sep 2023 15:39:19 +0300
Subject: [PATCH] fixed bugs 7.10

---
 .../ContentTabViewController.swift            | 48 ++++++++++++-------
 .../Content Tab/Models/ContentTabModels.swift |  1 +
 ...torViewController + UICollectionView.swift | 13 +++--
 .../AddonCreatorViewController.swift          | 29 +++++++++--
 .../CreatedAddonsModel.swift                  | 12 ++++-
 .../SkinCreatorController/ColorManger.swift   | 13 +++++
 .../SkinCreatorViewController+PixelView.swift |  1 +
 .../3dModel/EditorSkinModel.swift             |  4 ++
 .../Skin3DCreator/ColorManager3D.swift        | 12 +++++
 ...on_Skin3DTestViewController+Gestures.swift |  1 +
 .../Skin3DTestViewController.swift            |  2 +
 submodules/unity-crafty-craft-5               |  2 +-
 12 files changed, 111 insertions(+), 27 deletions(-)

diff --git a/Crafty Craft 5/Tab Bar/Content Tab/ContentTabViewController.swift b/Crafty Craft 5/Tab Bar/Content Tab/ContentTabViewController.swift
index 2c4a85c..8466cfc 100755
--- a/Crafty Craft 5/Tab Bar/Content Tab/ContentTabViewController.swift	
+++ b/Crafty Craft 5/Tab Bar/Content Tab/ContentTabViewController.swift	
@@ -31,8 +31,10 @@ class ContentTabViewController: UIViewController, TabBarConfigurable {
     
     private var purchIsValid: Bool = false {
         didSet {
-            segmentedControllMode = .latest
-            setupFilterView()
+            if !oldValue {
+                segmentedControllMode = .latest
+                setupFilterView()
+            }
         }
     }
     
@@ -130,7 +132,7 @@ class ContentTabViewController: UIViewController, TabBarConfigurable {
         validateSub()
         updateData()
         registerForKeyboardNotifications()
-        updateSerachFilter()
+        flushSearch()
     }
     
     override func viewWillDisappear(_ animated: Bool) {
@@ -159,12 +161,6 @@ class ContentTabViewController: UIViewController, TabBarConfigurable {
 
     }
     
-    private func updateSerachFilter() {
-        if let searchText = self.searchBarView.searchTextField.text, !searchText.isEmpty {
-            self.filterData(with: searchText)
-        }
-    }
-    
     private func updateData() {
         pageModel = setUpPageModel()
         
@@ -172,10 +168,13 @@ class ContentTabViewController: UIViewController, TabBarConfigurable {
     }
     
     private func updateFilteredData() {
-        if segmentedControllMode == .latest {
+        switch segmentedControllMode {
+        case .latest:
             filteredPageModel = pageModel
-        } else {
+        case .popular:
             filteredPageModel = pageModel.filter({ $0.isFavorite == true })
+        case .filter(let name):
+            setUpFilter(name: name)
         }
         
         updateUI()
@@ -213,7 +212,15 @@ class ContentTabViewController: UIViewController, TabBarConfigurable {
         let selectedFilterNames = [name]
         
         filteredPageModel = pageModel.compactMap { pageMode in
-            selectedFilterNames.contains(pageMode.filterCategory) ? pageMode : nil
+            if selectedFilterNames.contains(pageMode.filterCategory) {
+                if navbarSearchMode, let searchText = searchBarView.searchTextField.text, !searchText.isEmpty {
+                    return pageMode.name.lowercased().contains(searchText.lowercased()) ? pageMode : nil
+                } else {
+                    return pageMode
+                }
+            } else {
+                return nil
+            }
         }
         contentCollectionView.reloadData()
     }
@@ -283,6 +290,7 @@ class ContentTabViewController: UIViewController, TabBarConfigurable {
             segmentedControllMode = .popular
         case .filter(let name):
             if purchIsValid {
+                segmentedControllMode = .filter(name)
                 setUpFilter(name: name)
             } else {
                 segmentedControllMode = .latest
@@ -301,7 +309,9 @@ class ContentTabViewController: UIViewController, TabBarConfigurable {
         let contentFilterViewModel = ContentFilterViewModel(buttons: [
             ContentFilterModel(label: "", filter: .latest),
         ]) { [weak self] filter in
+            self?.flushSearch()
             self?.applyContent(filter: filter)
+            
         }
         
         // Create the SwiftUI view
@@ -350,11 +360,7 @@ class ContentTabViewController: UIViewController, TabBarConfigurable {
     
     private func setupSearchBar() {
         searchBarView.buttonTapAction = { [weak self] in
-            self?.navbarSearchMode.toggle()
-            if let isSearchViewShow = self?.navbarSearchMode, !isSearchViewShow {
-                self?.searchBarView.searchTextField.text = nil
-                self?.updateFilteredData()
-            }
+            self?.flushSearch()
         }
         searchBarView.onTextChanged = { [weak self] searchText in
             self?.filterData(with: searchText)
@@ -375,6 +381,12 @@ class ContentTabViewController: UIViewController, TabBarConfigurable {
     
     //MARK: UPD Methods
     
+    private func flushSearch() {
+        navbarSearchMode = false
+        searchBarView.searchTextField.text = nil
+        updateFilteredData()
+    }
+    
     private func updatePageControllerUI() {
         switch tabsPageControllMode {
         case .skins:
@@ -437,6 +449,7 @@ class ContentTabViewController: UIViewController, TabBarConfigurable {
     
     @objc private func tabButtonTapped(_ sender: UIButton) {
         guard let selectedTab = TabsPageController(rawValue: sender.tag) else { return }
+        flushSearch()
         tabsPageControllMode = selectedTab
     }
 
@@ -444,7 +457,6 @@ class ContentTabViewController: UIViewController, TabBarConfigurable {
 
 extension ContentTabViewController: UICollectionViewDelegate {
     func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
-        
         let contentViewController = ContentViewController(model: filteredPageModel[indexPath.item], mode: tabsPageControllMode )
         presentFullScreenViewController(contentViewController)
     }
diff --git a/Crafty Craft 5/Tab Bar/Content Tab/Models/ContentTabModels.swift b/Crafty Craft 5/Tab Bar/Content Tab/Models/ContentTabModels.swift
index 460751d..6823919 100644
--- a/Crafty Craft 5/Tab Bar/Content Tab/Models/ContentTabModels.swift	
+++ b/Crafty Craft 5/Tab Bar/Content Tab/Models/ContentTabModels.swift	
@@ -29,6 +29,7 @@ enum TabsPageController: Int {
 enum SegmentedController {
     case latest
     case popular
+    case filter(String)
 }
 
 struct TabPagesCollectionCellModel {
diff --git a/Crafty Craft 5/Tab Bar/Create Tab/Addon Creator/AddonCreatorMainScreen/AddonCreatorViewController + UICollectionView.swift b/Crafty Craft 5/Tab Bar/Create Tab/Addon Creator/AddonCreatorMainScreen/AddonCreatorViewController + UICollectionView.swift
index 2accd2a..15b576e 100755
--- a/Crafty Craft 5/Tab Bar/Create Tab/Addon Creator/AddonCreatorMainScreen/AddonCreatorViewController + UICollectionView.swift	
+++ b/Crafty Craft 5/Tab Bar/Create Tab/Addon Creator/AddonCreatorMainScreen/AddonCreatorViewController + UICollectionView.swift	
@@ -5,6 +5,8 @@ extension AddonCreatorViewController : UICollectionViewDelegate {
     func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
         
         if indexPath.item == 0 {
+            flushSearch()
+            
             let nextVC = AddonOptionsViewController()
             navigationController?.pushViewController(nextVC, animated: true)
             
@@ -99,12 +101,17 @@ extension AddonCreatorViewController {
                 selectedCell.alpha = 0.0
                 selectedCell.transform = CGAffineTransform(scaleX: 0.5, y: 0.5)
             }) { [weak self] _ in
+                guard let self else { return }
                 let deletedSkinIndex = indexPath.item - 1
-                self?.model.deleteAddon(at: deletedSkinIndex)
-                self?.model.updateCreatedAddons()
+                model.deleteAddon(at: deletedSkinIndex)
+                model.updateCreatedAddons()
+                
                 
+                if searchFieldMode, let searchText = seatchTextField.text, !searchText.isEmpty {
+                    filterContentFor(searchText: searchText)
+                }
                 // Firstly update UI
-                self?.addonCollectionView.performBatchUpdates({
+                addonCollectionView.performBatchUpdates({ [weak self] in
                     self?.addonCollectionView.deleteItems(at: [indexPath])
                 }, completion: nil)
             }
diff --git a/Crafty Craft 5/Tab Bar/Create Tab/Addon Creator/AddonCreatorMainScreen/AddonCreatorViewController.swift b/Crafty Craft 5/Tab Bar/Create Tab/Addon Creator/AddonCreatorMainScreen/AddonCreatorViewController.swift
index c81e016..81b4136 100755
--- a/Crafty Craft 5/Tab Bar/Create Tab/Addon Creator/AddonCreatorMainScreen/AddonCreatorViewController.swift	
+++ b/Crafty Craft 5/Tab Bar/Create Tab/Addon Creator/AddonCreatorMainScreen/AddonCreatorViewController.swift	
@@ -10,7 +10,7 @@ class AddonCreatorViewController: UIViewController {
     @IBOutlet weak var addonCollectionView: UICollectionView!
     @IBOutlet private weak var searchFieldHeightConstraint: NSLayoutConstraint!
     @IBOutlet private weak var searchBarButton: UIButton!
-    @IBOutlet private weak var seatchTextField: TintedTextField!
+    @IBOutlet weak var seatchTextField: TintedTextField!
     @IBOutlet private weak var tabsStackView: UIStackView!
     @IBOutlet private weak var layouTabButton: UIButton!
     @IBOutlet private weak var groupTabButton: UIButton!
@@ -41,7 +41,7 @@ class AddonCreatorViewController: UIViewController {
         }
     }
 
-    private var searchFieldMode: Bool = false {
+    var searchFieldMode: Bool = false {
         didSet {
             switchSearchMode()
         }
@@ -86,6 +86,7 @@ class AddonCreatorViewController: UIViewController {
         model.updateCreatedAddons()
         addonCollectionView.reloadData()
         registerForKeyboardNotifications()
+        updateSearchListIfNeeded()
     }
     
     override func viewWillDisappear(_ animated: Bool) {
@@ -109,6 +110,13 @@ class AddonCreatorViewController: UIViewController {
         String(describing: SsvedAddonCollectionCell.self)
     }
     
+    private func updateSearchListIfNeeded() {
+        if searchFieldMode, let searchText = seatchTextField.text, !searchText.isEmpty {
+            filterContentFor(searchText: searchText)
+            addonCollectionView.reloadData()
+        }
+    }
+    
     private func setupCollectionView() {
         let nib = UINib(nibName: cellId, bundle: nil)
         addonCollectionView.register(nib, forCellWithReuseIdentifier: cellId)
@@ -165,6 +173,14 @@ class AddonCreatorViewController: UIViewController {
         view.layoutIfNeeded()
     }
     
+    //MARK: - Internal Methods
+    
+    internal func flushSearch() {
+        seatchTextField.text = nil
+        model.filteringCreatedAddon = model.createdAddons
+        addonCollectionView.reloadData()
+    }
+    
     //MARK: - Private Methods
     
     private func updatePageControllerUI() {
@@ -199,6 +215,10 @@ class AddonCreatorViewController: UIViewController {
     
     @IBAction private func onNavBarSearchButtonTapped(_ sender: UIButton) {
         searchFieldMode.toggle()
+        
+        if !searchFieldMode {
+            self.flushSearch()
+        }
     }
     
     private func switchSearchMode() {
@@ -216,16 +236,19 @@ class AddonCreatorViewController: UIViewController {
     }
     
     @IBAction private func onRecentButtonTapped(_ sender: UIButton) {
+        flushSearch()
         tabsPageControllMode = .recent
         model.collectionMode = .recent
     }
     
     @IBAction private func onGroupButtonTapped(_ sender: UIButton) {
+        flushSearch()
         tabsPageControllMode = .group
         model.collectionMode = .groups
     }
     
     @IBAction private func onLatoutButtonTapped(_ sender: UIButton) {
+        flushSearch()
         tabsPageControllMode = .layout
         model.collectionMode = .savedAddons
     }
@@ -236,7 +259,7 @@ class AddonCreatorViewController: UIViewController {
 
 extension AddonCreatorViewController: UITextFieldDelegate {
     
-    private func filterContentFor(searchText text: String) {
+    func filterContentFor(searchText text: String) {
         model.filteringCreatedAddon = model.createdAddons.filter { (addon) -> Bool in
             return (addon.displayName.lowercased().contains(text.lowercased()))
         }
diff --git a/Crafty Craft 5/Tab Bar/Create Tab/Addon Creator/AddonCreatorMainScreen/CreatedAddonsModel.swift b/Crafty Craft 5/Tab Bar/Create Tab/Addon Creator/AddonCreatorMainScreen/CreatedAddonsModel.swift
index 13ec0bb..e9ece27 100644
--- a/Crafty Craft 5/Tab Bar/Create Tab/Addon Creator/AddonCreatorMainScreen/CreatedAddonsModel.swift	
+++ b/Crafty Craft 5/Tab Bar/Create Tab/Addon Creator/AddonCreatorMainScreen/CreatedAddonsModel.swift	
@@ -78,12 +78,20 @@ class CreatedAddonsModel {
     
     func deleteAddon(at index: Int) {
         
-        let addonToDelete = createdAddons[index]
+        var addonToDelete: SavedAddon?
+        if createdAddons.count == filteringCreatedAddon.count {
+            addonToDelete = createdAddons[index]
+        } else {
+            addonToDelete = filteringCreatedAddon[index]
+        }
         
+        guard let addon = addonToDelete else { return }
         // Delete from the data source (e.g., Realm)
-        RealmService.shared.deleteAddon(addon: addonToDelete)
+        RealmService.shared.deleteAddon(addon: addon)
         
         // Remove from the array
         createdAddons.remove(at: index)
+//        createdAddons.removeAll { $0.id == addon.id}
+//        filteringCreatedAddon.removeAll { $0.id == addon.id}
     }
 }
diff --git a/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin2DCreator/BodyPart2DPickerVC/SkinCreatorController/ColorManger.swift b/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin2DCreator/BodyPart2DPickerVC/SkinCreatorController/ColorManger.swift
index 981b093..3492cae 100644
--- a/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin2DCreator/BodyPart2DPickerVC/SkinCreatorController/ColorManger.swift	
+++ b/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin2DCreator/BodyPart2DPickerVC/SkinCreatorController/ColorManger.swift	
@@ -47,6 +47,19 @@ class ColorsManger {
 
     }
     
+    func addNewColor(_ color: UIColor) {
+        if color != .clear {
+
+            if colorsArr.count == maxColors {
+                colorsArr.removeLast()
+            }
+
+            colorsArr.insert(color, at: 0)
+            saveColorsToUserDefaults(colors: colorsArr)
+            delegate?.updateCollection()
+        }
+    }
+    
     func getColor(by index: Int ) -> UIColor {
         
         var colorToReturn = UIColor()
diff --git a/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin2DCreator/BodyPart2DPickerVC/SkinCreatorController/SkinCreatorViewController+PixelView.swift b/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin2DCreator/BodyPart2DPickerVC/SkinCreatorController/SkinCreatorViewController+PixelView.swift
index 7675620..5a5c960 100755
--- a/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin2DCreator/BodyPart2DPickerVC/SkinCreatorController/SkinCreatorViewController+PixelView.swift	
+++ b/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin2DCreator/BodyPart2DPickerVC/SkinCreatorController/SkinCreatorViewController+PixelView.swift	
@@ -76,6 +76,7 @@ extension SkinCreatorViewController : UIGestureRecognizerDelegate {
              
          case .ended, .cancelled:
              if let pickedColor = magnifyingGlassView?.backgroundColor {
+                 colorsManager.addNewColor(pickedColor)
                  _currentDrawingColor = pickedColor
              }
 //             getPixel
diff --git a/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin3DCreator/3dModel/EditorSkinModel.swift b/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin3DCreator/3dModel/EditorSkinModel.swift
index 06665cc..99948b3 100644
--- a/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin3DCreator/3dModel/EditorSkinModel.swift	
+++ b/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin3DCreator/3dModel/EditorSkinModel.swift	
@@ -63,6 +63,10 @@ class EditorSkinModel {
         AppDelegate.log("EditorSkinModel - deinited!")
     }
     
+    func addNewColorToPalitrs(_ newColor: UIColor) {
+        controller.colorManager3D.addNewColor(color: newColor)
+    }
+    
     private func getColorsFromAssemblyDiagram(skinAssemblyDiagram: UIImage) {
         if assemblyDiagramSize == .size64x64 {
             CubicHuman.BodyPart.allSides().forEach { bodyPartSide in
diff --git a/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin3DCreator/ColorManager3D.swift b/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin3DCreator/ColorManager3D.swift
index 5419a0e..43e0ec3 100644
--- a/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin3DCreator/ColorManager3D.swift	
+++ b/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin3DCreator/ColorManager3D.swift	
@@ -48,6 +48,18 @@ class ColorManager3D {
 
     }
     
+    func addNewColor(color: UIColor) {
+        if color != .clear {
+            if colorsArr.count == maxColors {
+                colorsArr.removeLast()
+            }
+
+            colorsArr.insert(color, at: 0)
+            saveColorsToUserDefaults(colors: colorsArr)
+            delegate?.updateCollection()
+        }
+    }
+    
     func getColor(by index: Int ) -> UIColor {
         
         var colorToReturn = UIColor()
diff --git a/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin3DCreator/Extension_Skin3DTestViewController+Gestures.swift b/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin3DCreator/Extension_Skin3DTestViewController+Gestures.swift
index 08e7b7b..d62768e 100644
--- a/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin3DCreator/Extension_Skin3DTestViewController+Gestures.swift	
+++ b/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin3DCreator/Extension_Skin3DTestViewController+Gestures.swift	
@@ -61,6 +61,7 @@ extension Skin3DTestViewController {
             }
         case .ended, .cancelled:
             if let peckedColor = magnifyingGlassView?.backgroundColor {
+                editorSkinModel.addNewColorToPalitrs(peckedColor)
                 editorSkinModel.currentDrawingColor = peckedColor
             }
             
diff --git a/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin3DCreator/Skin3DTestViewController.swift b/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin3DCreator/Skin3DTestViewController.swift
index 7eb2762..ec696b5 100755
--- a/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin3DCreator/Skin3DTestViewController.swift	
+++ b/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin3DCreator/Skin3DTestViewController.swift	
@@ -230,6 +230,8 @@ class Skin3DTestViewController: UIViewController {
             magnifyingGlassView?.backgroundColor = .white
             
             sceneView.addSubview(magnifyingGlassView!)
+        } else {
+            hideMagnifyingGlass()
         }
     }
     
diff --git a/submodules/unity-crafty-craft-5 b/submodules/unity-crafty-craft-5
index 70a9803..b0be9b2 160000
--- a/submodules/unity-crafty-craft-5
+++ b/submodules/unity-crafty-craft-5
@@ -1 +1 @@
-Subproject commit 70a9803783b388f6beb64e0db5db53d275cf5ceb
+Subproject commit b0be9b2fa30d8da0b4118266285457bf49e60313
-- 
2.37.0

