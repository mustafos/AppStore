From 0c946993be169460b216028b0d7246de82976360 Mon Sep 17 00:00:00 2001
From: VitalyPolezhay <>
Date: Wed, 15 Nov 2023 17:19:24 +0200
Subject: [PATCH] updated performance (redraw node)

---
 Crafty Craft 5.xcodeproj/project.pbxproj      |  4 +++
 .../Extensions/UIColor+Equatable.swift        | 31 ++++++++++++++++
 .../3dModel/EditorSkinModel.swift             | 36 ++++++++++++++-----
 3 files changed, 63 insertions(+), 8 deletions(-)
 create mode 100644 Crafty Craft 5/Extensions/UIColor+Equatable.swift

diff --git a/Crafty Craft 5.xcodeproj/project.pbxproj b/Crafty Craft 5.xcodeproj/project.pbxproj
index 9465e69..1b98836 100644
--- a/Crafty Craft 5.xcodeproj/project.pbxproj	
+++ b/Crafty Craft 5.xcodeproj/project.pbxproj	
@@ -17,6 +17,7 @@
 		033847A42A9CBA1700A55021 /* EzPopup in Frameworks */ = {isa = PBXBuildFile; productRef = 033847A32A9CBA1700A55021 /* EzPopup */; };
 		033847A62A9CBE9A00A55021 /* DocumentPicker.swift in Sources */ = {isa = PBXBuildFile; fileRef = 033847A52A9CBE9A00A55021 /* DocumentPicker.swift */; };
 		033977CD2AE2B1D90096AC65 /* sub.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 033977CC2AE2B1D90096AC65 /* sub.ttf */; };
+		03435CCC2B05183F00423598 /* UIColor+Equatable.swift in Sources */ = {isa = PBXBuildFile; fileRef = 03435CCB2B05183F00423598 /* UIColor+Equatable.swift */; };
 		0351666F2AFA3F0900035087 /* TransactionView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 035166272AFA3F0900035087 /* TransactionView.swift */; };
 		035166702AFA3F0900035087 /* TransactionView.xib in Resources */ = {isa = PBXBuildFile; fileRef = 035166282AFA3F0900035087 /* TransactionView.xib */; };
 		035166712AFA3F0900035087 /* extensions-freeform.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0351662A2AFA3F0900035087 /* extensions-freeform.swift */; };
@@ -381,6 +382,7 @@
 		0338479F2A9CB41700A55021 /* DownloadContnetViewController.xib */ = {isa = PBXFileReference; lastKnownFileType = file.xib; path = DownloadContnetViewController.xib; sourceTree = "<group>"; };
 		033847A52A9CBE9A00A55021 /* DocumentPicker.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DocumentPicker.swift; sourceTree = "<group>"; };
 		033977CC2AE2B1D90096AC65 /* sub.ttf */ = {isa = PBXFileReference; lastKnownFileType = file; path = sub.ttf; sourceTree = "<group>"; };
+		03435CCB2B05183F00423598 /* UIColor+Equatable.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "UIColor+Equatable.swift"; sourceTree = "<group>"; };
 		035166272AFA3F0900035087 /* TransactionView.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = TransactionView.swift; sourceTree = "<group>"; };
 		035166282AFA3F0900035087 /* TransactionView.xib */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.xib; path = TransactionView.xib; sourceTree = "<group>"; };
 		0351662A2AFA3F0900035087 /* extensions-freeform.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "extensions-freeform.swift"; sourceTree = "<group>"; };
@@ -1646,6 +1648,7 @@
 		F420A7A32A0284B30098B849 /* Extensions */ = {
 			isa = PBXGroup;
 			children = (
+				03435CCB2B05183F00423598 /* UIColor+Equatable.swift */,
 				D7310D712A842F810020D42F /* Image+Trim.swift */,
 				6F6F55B72A4ED41A0093F556 /* CheckParameters.swift */,
 				D72306E52A7932470000F6B3 /* Color+Resource.swift */,
@@ -2158,6 +2161,7 @@
 				03AFFD452AD847D0002A131D /* SkinVariantsViewController.swift in Sources */,
 				0351669D2AFA3F0900035087 /* ConstraintRelatableTarget.swift in Sources */,
 				F438AA182A14BB0D007469E7 /* Pikko.swift in Sources */,
+				03435CCC2B05183F00423598 /* UIColor+Equatable.swift in Sources */,
 				C040CE032A56EEA600F28F54 /* Extension_EditorSkinModel+SaveAndShare.swift in Sources */,
 				03981F502AE159B100C69027 /* SeedRealmSession.swift in Sources */,
 				035166902AFA3F0900035087 /* ConstraintLayoutGuide.swift in Sources */,
diff --git a/Crafty Craft 5/Extensions/UIColor+Equatable.swift b/Crafty Craft 5/Extensions/UIColor+Equatable.swift
new file mode 100644
index 0000000..afdd86e
--- /dev/null
+++ b/Crafty Craft 5/Extensions/UIColor+Equatable.swift	
@@ -0,0 +1,31 @@
+//
+//  UIColor+Equatable.swift
+//  Crafty Craft 5
+//
+//  Created by Vitaliy Polezhay on 15.11.2023.
+//  Copyright Â© 2023 Noname Digital. All rights reserved.
+//
+
+import Foundation
+import UIKit
+
+extension UIColor {
+  static func == (l: UIColor, r: UIColor) -> Bool {
+    var r1: CGFloat = 0
+    var g1: CGFloat = 0
+    var b1: CGFloat = 0
+    var a1: CGFloat = 0
+    l.getRed(&r1, green: &g1, blue: &b1, alpha: &a1)
+    var r2: CGFloat = 0
+    var g2: CGFloat = 0
+    var b2: CGFloat = 0
+    var a2: CGFloat = 0
+    r.getRed(&r2, green: &g2, blue: &b2, alpha: &a2)
+    return r1 == r2 && g1 == g2 && b1 == b2 && a1 == a2
+  }
+}
+func == (l: UIColor?, r: UIColor?) -> Bool {
+  let l = l ?? .clear
+  let r = r ?? .clear
+  return l == r
+}
diff --git a/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin3DCreator/3dModel/EditorSkinModel.swift b/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin3DCreator/3dModel/EditorSkinModel.swift
index c96dfa0..ec8fa4d 100644
--- a/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin3DCreator/3dModel/EditorSkinModel.swift	
+++ b/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin3DCreator/3dModel/EditorSkinModel.swift	
@@ -2,6 +2,7 @@
 
 import Foundation
 import UIKit
+import SceneKit
 
 enum BrashSize: Int, CaseIterable {
     case one = 1
@@ -91,7 +92,9 @@ class EditorSkinModel {
                     if sideNode.name == rNodeName {
                         sideNode.childNodes.forEach { pixelNode in
                             if Int(pixelNode.name ?? "0") == command.indexes[i] {
-                                pixelNode.geometry?.firstMaterial?.diffuse.contents = command.colors[i]
+                                if let color = pixelNode.geometry?.firstMaterial?.diffuse.contents as? UIColor, color == command.colors[i] {} else {
+                                    pixelNode.geometry?.firstMaterial?.diffuse.contents = command.colors[i]
+                                }
                             }
                         }
                     }
@@ -165,7 +168,9 @@ class EditorSkinModel {
                 if sideNode.name == nameRootNod {
                     sideNode.childNodes.forEach { pixelNode in
                         if pixelNode.name != nameRootNod {
-                            pixelNode.geometry?.firstMaterial?.diffuse.contents = currentDrawingColor
+                            if let color = pixelNode.geometry?.firstMaterial?.diffuse.contents as? UIColor, color == currentDrawingColor {} else {
+                                pixelNode.geometry?.firstMaterial?.diffuse.contents = currentDrawingColor
+                            }
                         }
                     }
                 }
@@ -197,10 +202,9 @@ class EditorSkinModel {
     
     private func changePixelArray(indexArray: [Int], color: UIColor, nameRootNod: String, gestureState: UIGestureRecognizer.State) {
         if let node = controller.sceneView.scene!.rootNode.childNodes.first(where: { $0.name == nameRootNod }) {
-            if let _ = node.childNodes.first(where: { $0.name != node.name && Int($0.name ?? "0") == (indexArray.first ?? 0) }) {
-                
-                let oldColors = getColorsFromSkinNodes(by: indexArray, nameRootNod: nameRootNod)
-                
+            if node.childNodes.contains(where: { $0.name != node.name && Int($0.name ?? "0") == (indexArray.first ?? 0) }) {
+                let oldColors = getColorsFromSkinNodes(by: indexArray, node: node)
+
                 if gestureState == .ended {
                     if drawSkinCommands.undoCommands.count > commandIndex {
                         drawSkinCommands.undoCommands.removeLast(drawSkinCommands.undoCommands.count - commandIndex)
@@ -250,10 +254,16 @@ class EditorSkinModel {
                         break
                     }
                     colorlForSideNodes[nameRootNod]?[i] = newColor
-                    node.childNodes[i].geometry?.firstMaterial?.diffuse.contents = newColor
+                    if let color = node.childNodes[i].geometry?.firstMaterial?.diffuse.contents as? UIColor, color == newColor {
+                        
+                    } else {
+                        print("NOT REUSE")
+                        node.childNodes[i].geometry?.firstMaterial?.diffuse.contents = newColor
+                    }
+                    
                 }
                 
-                let newColors = getColorsFromSkinNodes(by: indexArray, nameRootNod: nameRootNod)
+                let newColors = getColorsFromSkinNodes(by: indexArray, node: node)
                 
                 if gestureState == .ended {
                     drawSkinCommands.redoCommands.append(SkinCommand(indexes: indexArray, colors: newColors, nodeName: Array(repeating: nameRootNod, count: indexArray.count)))
@@ -393,6 +403,16 @@ class EditorSkinModel {
         return color
     }
     
+    private func getColorsFromSkinNodes(by indexArray: [Int], node: SCNNode) -> [UIColor] {
+        var nodeColors = [UIColor]()
+        for i in indexArray {
+            if let nodeColor = node.childNodes[i].geometry?.firstMaterial?.diffuse.contents as? UIColor {
+                nodeColors.append(nodeColor)
+            }
+        }
+        return nodeColors
+    }
+    
     private func getColorsFromSkinNodes(by indexArray: [Int], nameRootNod: String) -> [UIColor] {
         var nodeColors = [UIColor]()
         for i in indexArray {
-- 
2.37.0

