From cc280082b1643771a461779d5b8b54a18fafacb5 Mon Sep 17 00:00:00 2001
From: VitalyPolezhay <>
Date: Tue, 26 Sep 2023 16:12:02 +0300
Subject: [PATCH] fixed bug with 2d editor and transform

---
 .../Extensions/UIImage+Resized.swift          |  6 +--
 .../AddonEditorViewController.swift           |  4 +-
 .../SkinCreatorImportViewController.swift     | 30 +++++++++----
 .../SkinCreatorViewController.swift           | 42 +++++++++++++++----
 4 files changed, 59 insertions(+), 23 deletions(-)

diff --git a/Crafty Craft 5/Extensions/UIImage+Resized.swift b/Crafty Craft 5/Extensions/UIImage+Resized.swift
index 06de03f..26e3a90 100755
--- a/Crafty Craft 5/Extensions/UIImage+Resized.swift	
+++ b/Crafty Craft 5/Extensions/UIImage+Resized.swift	
@@ -145,10 +145,8 @@ extension UIImage {
         
         var colorArray: [UIColor] = []
         var coloredPixelsArr = [UIColor]()
-        
+        for y in 0..<rectHeight {
         for x in 0..<rectWidth {
-            for y in 0..<rectHeight {
-            
                 let offsetX = x + localStartX
                 let offsetY = y + localStartY
                 let offset = (offsetY * imgTotalWidth + offsetX) * bytesPerPixel
@@ -168,7 +166,7 @@ extension UIImage {
         
         //        AppDelegate.log("coloredPixelsArr.count = \(coloredPixelsArr.count)")
         
-        return colorArray.reversed()
+        return colorArray
     }
     
     
diff --git a/Crafty Craft 5/Tab Bar/Create Tab/Addon Creator/AddonEditorController/AddonEditorViewController.swift b/Crafty Craft 5/Tab Bar/Create Tab/Addon Creator/AddonEditorController/AddonEditorViewController.swift
index 7619f09..2fff670 100644
--- a/Crafty Craft 5/Tab Bar/Create Tab/Addon Creator/AddonEditorController/AddonEditorViewController.swift	
+++ b/Crafty Craft 5/Tab Bar/Create Tab/Addon Creator/AddonEditorController/AddonEditorViewController.swift	
@@ -235,7 +235,9 @@ extension AddonEditorViewController: UITableViewDelegate, UITableViewDataSource
             image = image?.resizeAspectFit(to: size, targetScale: 1)
         }
         
-        let vc = SkinCreatorViewController(bodyPartSide: .init(name: "edit", width: Int(size.width), height: Int(size.width), startX: 0, startY: 0), currentEditableSkin: .init(image: (image?.pngData())!)) { [weak self] skin in
+    
+        let vc = SkinCreatorViewController(convasWidth: Int(size.width), convasHeight: Int(size.width),
+                                           currentEditableSkin: .init(image: (image?.pngData())!)) { [weak self] skin in
             self?.model.addonModel.displayImageData = skin.skinAssemblyDiagram?.pngData()
             self?.model.addonModel.previewData = self?.model.addonModel.displayImageData
             
diff --git a/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin2DCreator/BodyPart2DPickerVC/SkinCreatorController/SkinCreatorImportViewController.swift b/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin2DCreator/BodyPart2DPickerVC/SkinCreatorController/SkinCreatorImportViewController.swift
index 952e572..0c3cb07 100755
--- a/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin2DCreator/BodyPart2DPickerVC/SkinCreatorController/SkinCreatorImportViewController.swift	
+++ b/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin2DCreator/BodyPart2DPickerVC/SkinCreatorController/SkinCreatorImportViewController.swift	
@@ -58,6 +58,16 @@ final class SkinCreatorImportViewController: UIViewController {
         super.init(nibName: nil, bundle: nil)
     }
     
+    init(canvasWidth: Int, canvasHeight: Int, currentEditableSkin: SkinCreatedModel?, delegate: SkinCreatorImportProtocol) {
+        self.currentEditableSkin = currentEditableSkin
+        self.delegate = delegate
+        
+        CANVAS_WIDTH = canvasWidth
+        CANVAS_HEIGHT = canvasHeight
+        
+        super.init(nibName: nil, bundle: nil)
+    }
+    
     required init?(coder: NSCoder) {
         fatalError("init(coder:) has not been implemented")
     }
@@ -105,8 +115,9 @@ final class SkinCreatorImportViewController: UIViewController {
     
     private func setUpCanvasView() {
         
+        
+        
         let colorsArr = currentEditableSkin?.skinAssemblyDiagram?
-            .rotate(radians: CGFloat.pi/2)?
             .extractPixelColors(width: currentBodyPartSide?.width,
                                                                                      height: currentBodyPartSide?.height,
                                                                                      startX: currentBodyPartSide?.startX,
@@ -143,16 +154,17 @@ final class SkinCreatorImportViewController: UIViewController {
     
     
     private func processImported(image: UIImage) {
-        guard let width = currentBodyPartSide?.width, let height = currentBodyPartSide?.height else {
-            return
+        if let width = currentBodyPartSide?.width, let height = currentBodyPartSide?.height {
+            CANVAS_WIDTH = width
+            CANVAS_HEIGHT = height
         }
+        currentBodyPartSide = nil
+                    
+        guard let resizedImage = image.resizeImageTo(size: .init(width: CANVAS_WIDTH, height: CANVAS_HEIGHT)) else { return }
+        guard let rotatedImage = resizedImage.rotate(radians: CGFloat.pi/2) else { return }
+        guard let pixelizedImg = rotatedImage.pixelateAndResize(to: .init(width: CANVAS_WIDTH, height: CANVAS_WIDTH)) else { return }
         
-        
-        
-        guard let rotatedImage = image.rotate(radians: CGFloat.pi/2) else { return }
-        guard let pixelizedImg = image.pixelateAndResize(to: .init(width: width, height: height)) else { return }
-        
-        guard let colorsArr = pixelizedImg.extractPixelColors(width:width, height: height, startX: 0, startY:0) else {
+        guard let colorsArr = pixelizedImg.extractPixelColors(width:CANVAS_WIDTH, height: CANVAS_WIDTH, startX: 0, startY:0) else {
             return
         }
         
diff --git a/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin2DCreator/BodyPart2DPickerVC/SkinCreatorController/SkinCreatorViewController.swift b/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin2DCreator/BodyPart2DPickerVC/SkinCreatorController/SkinCreatorViewController.swift
index e34957e..9fac74e 100755
--- a/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin2DCreator/BodyPart2DPickerVC/SkinCreatorController/SkinCreatorViewController.swift	
+++ b/Crafty Craft 5/Tab Bar/Create Tab/SkinsCreator/ListOfCreatedSkinsController/Skin2DCreator/BodyPart2DPickerVC/SkinCreatorController/SkinCreatorViewController.swift	
@@ -233,7 +233,14 @@ class SkinCreatorViewController: UIViewController, PKCanvasViewDelegate, PKToolP
     }
     
     private func displayImportDialog() {
-        navigationController?.pushViewController(SkinCreatorImportViewController(bodyPartSide: currentBodyPartSide!, currentEditableSkin: currentEditableSkin, delegate: self), animated: true)
+        if let currentBodyPartSide {
+            navigationController?.pushViewController(SkinCreatorImportViewController(bodyPartSide: currentBodyPartSide, currentEditableSkin: currentEditableSkin, delegate: self), animated: true)
+        } else {
+            navigationController?.pushViewController(SkinCreatorImportViewController(canvasWidth: CANVAS_WIDTH,
+                                                                                     canvasHeight: CANVAS_HEIGHT,
+                                                                                     currentEditableSkin: currentEditableSkin, delegate: self), animated: true)
+        }
+        
     }
     
     @IBAction func dropperBtnTapped(_ sender: UIButton) {
@@ -265,10 +272,13 @@ class SkinCreatorViewController: UIViewController, PKCanvasViewDelegate, PKToolP
         let previousDrawing = Drawing(colorArray: canvasColorArray, width: canvasWidth, height: canvasHeight)
         let pictureExporter = PictureExporter(drawing: previousDrawing)
         
-        guard let side = currentBodyPartSide else { return }
+//        guard let side = currentBodyPartSide else { return }
+        
+        let width = currentBodyPartSide?.width ?? CANVAS_WIDTH
+        let height = currentBodyPartSide?.height ?? CANVAS_HEIGHT
         
         if currentEditableSkin?.name == "edit" {
-            guard let skinDiagram = pictureExporter.generateUIImagefromDrawing(width: side.width, height: side.height) else {
+            guard let skinDiagram = pictureExporter.generateUIImagefromDrawing(width: width, height: height) else {
                 AppDelegate.log("unable to create SkinDiagram ")
                 return
             }
@@ -276,7 +286,7 @@ class SkinCreatorViewController: UIViewController, PKCanvasViewDelegate, PKToolP
             
             currentEditableSkin.skinAssemblyDiagram = skinDiagram
         } else {
-            guard let skinDiagram = pictureExporter.createImageWithRawPixels(bodyPartSide: side, image: currentEditableSkin?.skinAssemblyDiagram) else {
+            guard let skinDiagram = pictureExporter.createImageWithRawPixels(bodyPartSide: currentBodyPartSide ?? .init(name: "Side", width: width, height: height, startX: 0, startY: 0), image: currentEditableSkin?.skinAssemblyDiagram) else {
                 AppDelegate.log("unable to create SkinDiagram ")
                 return
             }
@@ -300,6 +310,16 @@ class SkinCreatorViewController: UIViewController, PKCanvasViewDelegate, PKToolP
         super.init(nibName: nil, bundle: nil)
     }
     
+    init(convasWidth: Int, convasHeight: Int, currentEditableSkin: SkinCreatedModel?, imageDataCallback: @escaping ImageDataCallback) {
+        self.currentEditableSkin = currentEditableSkin
+        self.imageDataCallback = imageDataCallback
+        
+        CANVAS_WIDTH = convasWidth
+        CANVAS_HEIGHT = convasHeight
+        
+        super.init(nibName: nil, bundle: nil)
+    }
+    
     required init?(coder: NSCoder) {
         fatalError("init(coder:) has not been implemented")
     }
@@ -359,11 +379,15 @@ class SkinCreatorViewController: UIViewController, PKCanvasViewDelegate, PKToolP
         
         var colorsArr: [UIColor]?
         
-        colorsArr = currentEditableSkin?.skinAssemblyDiagram?
-            
-            .resizeImageTo(size: .init(width: currentBodyPartSide?.width ?? 64,
-                                       height: currentBodyPartSide?.height ?? 64))?
-            .rotate(radians: CGFloat.pi/2)?
+        var image = currentEditableSkin?.skinAssemblyDiagram
+//            .rotate(radians: CGFloat.pi)
+        if currentBodyPartSide == nil {
+            image = image?.resizeImageTo(size: .init(width: CANVAS_WIDTH,
+                                                     height: CANVAS_HEIGHT))
+        }
+        
+        colorsArr = image?
+
             .extractPixelColors(width: currentBodyPartSide?.width,
                                 height: currentBodyPartSide?.height,
                                 startX: currentBodyPartSide?.startX,
-- 
2.37.0

