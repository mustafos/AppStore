From a38459ac91a284afb2a9593bd53a0e266ef3eed3 Mon Sep 17 00:00:00 2001
From: VitalyPolezhay <>
Date: Tue, 14 Nov 2023 11:44:26 +0200
Subject: [PATCH] fixed bugfix 11 Nov

---
 Crafty Craft 5.xcodeproj/project.pbxproj      |   4 +
 .../Extensions/UIView+Constraints.swift       |  26 ++++
 .../ContentViewController.swift               | 116 ++++++++++++++++++
 .../Seed Tab/Cell/SeedTableViewCell.xib       |   2 +-
 .../Seed Tab/SeedDetailsViewController.swift  |   4 +-
 .../ServerDetailsViewController.swift         |   2 +-
 6 files changed, 150 insertions(+), 4 deletions(-)
 create mode 100644 Crafty Craft 5/Extensions/UIView+Constraints.swift

diff --git a/Crafty Craft 5.xcodeproj/project.pbxproj b/Crafty Craft 5.xcodeproj/project.pbxproj
index 309d653..9465e69 100644
--- a/Crafty Craft 5.xcodeproj/project.pbxproj	
+++ b/Crafty Craft 5.xcodeproj/project.pbxproj	
@@ -101,6 +101,7 @@
 		039BF2B52AA326830065EF48 /* Localizable.strings in Resources */ = {isa = PBXBuildFile; fileRef = 039BF2362AA326830065EF48 /* Localizable.strings */; };
 		039BF2B62AA326830065EF48 /* validateLocalizable.swift in Sources */ = {isa = PBXBuildFile; fileRef = 039BF24D2AA326830065EF48 /* validateLocalizable.swift */; };
 		039BF2F32AA3294C0065EF48 /* PollerOne-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 039BF2F22AA3294C0065EF48 /* PollerOne-Regular.ttf */; };
+		039F50F22B036EE200250C0D /* UIView+Constraints.swift in Sources */ = {isa = PBXBuildFile; fileRef = 039F50F12B036EE200250C0D /* UIView+Constraints.swift */; };
 		03A54F852AD5878900F10AA5 /* BetterSegmentedControl in Frameworks */ = {isa = PBXBuildFile; productRef = 03A54F842AD5878900F10AA5 /* BetterSegmentedControl */; };
 		03A54F892AD5937C00F10AA5 /* AddonCreatorMainVC.swift in Sources */ = {isa = PBXBuildFile; fileRef = 03A54F872AD5937C00F10AA5 /* AddonCreatorMainVC.swift */; };
 		03A54F8A2AD5937C00F10AA5 /* AddonCreatorMainVC.xib in Resources */ = {isa = PBXBuildFile; fileRef = 03A54F882AD5937C00F10AA5 /* AddonCreatorMainVC.xib */; };
@@ -506,6 +507,7 @@
 		039BF2612AA326830065EF48 /* ca */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = ca; path = ca.lproj/Localizable.strings; sourceTree = "<group>"; };
 		039BF2622AA326830065EF48 /* en-IN */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = "en-IN"; path = "en-IN.lproj/Localizable.strings"; sourceTree = "<group>"; };
 		039BF2F22AA3294C0065EF48 /* PollerOne-Regular.ttf */ = {isa = PBXFileReference; lastKnownFileType = file; path = "PollerOne-Regular.ttf"; sourceTree = "<group>"; };
+		039F50F12B036EE200250C0D /* UIView+Constraints.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "UIView+Constraints.swift"; sourceTree = "<group>"; };
 		03A54F872AD5937C00F10AA5 /* AddonCreatorMainVC.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AddonCreatorMainVC.swift; sourceTree = "<group>"; };
 		03A54F882AD5937C00F10AA5 /* AddonCreatorMainVC.xib */ = {isa = PBXFileReference; lastKnownFileType = file.xib; path = AddonCreatorMainVC.xib; sourceTree = "<group>"; };
 		03A54F8C2AD597A800F10AA5 /* SkinCreatorMainVC.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SkinCreatorMainVC.swift; sourceTree = "<group>"; };
@@ -1676,6 +1678,7 @@
 				03ACD3522ADE6A8C00052439 /* UILabel+TextInset.swift */,
 				03AC348D2AE7A69600456F51 /* UIImageView+Border.swift */,
 				038360BE2AEFA35200751797 /* String+CaseInsesetive.swift */,
+				039F50F12B036EE200250C0D /* UIView+Constraints.swift */,
 			);
 			path = Extensions;
 			sourceTree = "<group>";
@@ -2292,6 +2295,7 @@
 				D70970352A77F6F80044F81F /* SkinCreatorImportViewController.swift in Sources */,
 				D77112642A8D061A009AE952 /* UINavigationController+Pop.swift in Sources */,
 				F40415E22A126E5C00066473 /* BucketTool.swift in Sources */,
+				039F50F22B036EE200250C0D /* UIView+Constraints.swift in Sources */,
 				633030442A34AB8900CDCD4A /* SkinEditorVCModel.swift in Sources */,
 				035166822AFA3F0900035087 /* ConstraintAttributes.swift in Sources */,
 				F40415DA2A126C5600066473 /* Pixel.swift in Sources */,
diff --git a/Crafty Craft 5/Extensions/UIView+Constraints.swift b/Crafty Craft 5/Extensions/UIView+Constraints.swift
new file mode 100644
index 0000000..2fb8a32
--- /dev/null
+++ b/Crafty Craft 5/Extensions/UIView+Constraints.swift	
@@ -0,0 +1,26 @@
+//
+//  UIView+Constraints.swift
+//  Crafty Craft 5
+//
+//  Created by Vitaliy Polezhay on 14.11.2023.
+//  Copyright Â© 2023 Noname Digital. All rights reserved.
+//
+
+import Foundation
+import UIKit
+
+
+extension UIView {
+    @discardableResult
+    func centerInSuperview() -> [NSLayoutConstraint] {
+        translatesAutoresizingMaskIntoConstraints = false
+        let constraints = [
+            centerXAnchor.constraint(equalTo: superview!.centerXAnchor),
+            centerYAnchor.constraint(equalTo: superview!.centerYAnchor)
+        ]
+        NSLayoutConstraint.activate(constraints)
+        return constraints
+    }
+}
+
+
diff --git a/Crafty Craft 5/Tab Bar/Content Tab/Content Module/ContentViewController.swift b/Crafty Craft 5/Tab Bar/Content Tab/Content Module/ContentViewController.swift
index 21a1b76..59e7194 100755
--- a/Crafty Craft 5/Tab Bar/Content Tab/Content Module/ContentViewController.swift	
+++ b/Crafty Craft 5/Tab Bar/Content Tab/Content Module/ContentViewController.swift	
@@ -3,6 +3,8 @@ import EzPopup
 import ZIPFoundation
 
 class ContentViewController: UIViewController {
+    typealias ImageDataCallback = (Data?) -> Void
+    
     private lazy var minecraftSkinManager: MinecraftSkinManagerProtocol = MinecraftSkinManager()
     
     @IBOutlet private weak var navigationBarContainerView: UIView!
@@ -23,6 +25,7 @@ class ContentViewController: UIViewController {
         }
     }
     
+    private var activityIndicator: UIActivityIndicatorView?
     private var documentPicker: DocumentPicker?
     
     private var isPageFavorite: Bool = false
@@ -30,6 +33,24 @@ class ContentViewController: UIViewController {
     private var model: TabPagesCollectionCellModel
     private let mode: TabsPageController
     
+    private lazy var dropboxQueue: DispatchQueue = {
+        let queue = DispatchQueue(label: "com.seed.serialContent")
+        
+        return queue
+    }()
+    
+    private let imageSemaphore = DispatchSemaphore(value: 0)
+    private var imageUrl: URL?
+    private var image: UIImage?
+    
+    private lazy var imageService = ImageService()
+    private var imageRequest: Cancellable?
+    private var imageDataCallback: ImageDataCallback?
+    
+    private var imageFetchOperation: DispatchWorkItem = .init(block: {})
+    private var imageDownloadOperation: DispatchWorkItem = .init(block: {})
+    private var imageApplyOperation: DispatchWorkItem = .init(block: {})
+    
     init(model: TabPagesCollectionCellModel, mode: TabsPageController) {
         self.model = model
         self.mode = mode
@@ -62,6 +83,7 @@ class ContentViewController: UIViewController {
             pageImage.image = UIImage(data: image)
         } else {
             pageImage.image = UIImage()
+            loadDropboxImage(imageName: model.image, queue: dropboxQueue)
         }
         pageLabel.text = model.name
         textView.text = model.description
@@ -84,6 +106,100 @@ class ContentViewController: UIViewController {
         }
     }
     
+    private func loadDropboxImage(imageName: String, queue: DispatchQueue) {
+        DispatchQueue.main.async { [weak self] in
+            self?.showActivityIndicator()
+        }
+        
+        imageFetchOperation = DispatchWorkItem(block: { [weak self] in
+            guard self?.imageFetchOperation.isCancelled == false else {
+                return
+            }
+            
+            self?.fetchDropboxUrl(by: imageName)
+        })
+        
+        imageDownloadOperation = DispatchWorkItem(block: { [weak self] in
+            guard self?.imageDownloadOperation.isCancelled == false else {
+                return
+            }
+            
+            guard let url = self?.imageUrl else {
+                return
+            }
+            
+            self?.fetchImage(from: url)
+        })
+        
+        imageApplyOperation = DispatchWorkItem(block: { [weak self] in
+            guard self?.imageApplyOperation.isCancelled == false else {
+                return
+            }
+            
+            let img = self?.image ?? UIImage()
+            
+            // Update Thumbnail Image View
+            DispatchQueue.main.async {
+                self?.hideActivityIndicator()
+                self?.pageImage.image = img
+            }
+            
+            if let imageDataCallback = self?.imageDataCallback {
+                imageDataCallback(self?.image?.pngData())
+            }
+        })
+        
+        queue.async(execute: imageFetchOperation)
+        queue.async(execute: imageDownloadOperation)
+        queue.async(execute: imageApplyOperation)
+    }
+    
+    private func fetchDropboxUrl(by name: String) {
+        DropBoxParserFiles.shared.getBloodyImageURLFromDropBox(img: name) { [weak self] stringUrl in
+            if let stringUrl, let url = URL(string: stringUrl) {
+                self?.imageUrl = url
+            } else {
+                // data from url == error
+                self?.imageUrl = .none
+                self?.image = .none
+                
+                self?.imageDownloadOperation.cancel()
+                
+                DispatchQueue.main.async {
+                    self?.pageImage.image = UIImage()
+                }
+            }
+            self?.imageSemaphore.signal()
+        }
+        imageSemaphore.wait()
+    }
+    
+    private func fetchImage(from url: URL) {
+        if let imageUrl {
+            imageRequest = imageService.image(for: imageUrl) { [weak self] image in
+                self?.image = image
+                self?.imageSemaphore.signal()
+            }
+            imageSemaphore.wait()
+        }
+    }
+    
+    private func showActivityIndicator() {
+        activityIndicator = UIActivityIndicatorView(style: .large)
+        activityIndicator?.startAnimating()
+        guard let activityIndicator else { return }
+        activityIndicator.color = .white
+        activityIndicator.translatesAutoresizingMaskIntoConstraints = false
+        
+        pageImage.addSubview(activityIndicator)
+        activityIndicator.centerInSuperview()
+    }
+    
+    private func hideActivityIndicator() {
+        activityIndicator?.removeFromSuperview()
+        activityIndicator = nil
+    }
+    
     private func updateFavoriteButton() {
         let imageName = isPageFavorite ? "FavButton_selected" : "FavButton_unselected"
         favoriteButton.setImage(UIImage(named: imageName), for: .normal)
diff --git a/Crafty Craft 5/Tab Bar/Seed Tab/Cell/SeedTableViewCell.xib b/Crafty Craft 5/Tab Bar/Seed Tab/Cell/SeedTableViewCell.xib
index 179f663..bcf1021 100644
--- a/Crafty Craft 5/Tab Bar/Seed Tab/Cell/SeedTableViewCell.xib	
+++ b/Crafty Craft 5/Tab Bar/Seed Tab/Cell/SeedTableViewCell.xib	
@@ -16,7 +16,7 @@
     <objects>
         <placeholder placeholderIdentifier="IBFilesOwner" id="-1" userLabel="File's Owner"/>
         <placeholder placeholderIdentifier="IBFirstResponder" id="-2" customClass="UIResponder"/>
-        <tableViewCell contentMode="scaleToFill" selectionStyle="default" indentationWidth="10" id="KGk-i7-Jjw" customClass="SeedTableViewCell" customModule="Crafty_Craft_5" customModuleProvider="target">
+        <tableViewCell contentMode="scaleToFill" selectionStyle="none" indentationWidth="10" id="KGk-i7-Jjw" customClass="SeedTableViewCell" customModule="Crafty_Craft_5" customModuleProvider="target">
             <rect key="frame" x="0.0" y="0.0" width="320" height="350"/>
             <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
             <tableViewCellContentView key="contentView" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" tableViewCell="KGk-i7-Jjw" id="H2p-sc-9uM">
diff --git a/Crafty Craft 5/Tab Bar/Seed Tab/SeedDetailsViewController.swift b/Crafty Craft 5/Tab Bar/Seed Tab/SeedDetailsViewController.swift
index cbaf5fa..5e55afc 100644
--- a/Crafty Craft 5/Tab Bar/Seed Tab/SeedDetailsViewController.swift	
+++ b/Crafty Craft 5/Tab Bar/Seed Tab/SeedDetailsViewController.swift	
@@ -18,7 +18,7 @@ class SeedDetailsViewController: UIViewController {
     @IBOutlet weak var descSeedLabel: UILabel!
     @IBOutlet weak var seedIcon: UIImageView!
     private lazy var dropboxQueue: DispatchQueue = {
-        let queue = DispatchQueue(label: "com.seed.serial")
+        let queue = DispatchQueue(label: "com.seed.serialSeed")
         
         return queue
     }()
@@ -37,7 +37,7 @@ class SeedDetailsViewController: UIViewController {
     
     private lazy var loader = {
         let activityView = UIActivityIndicatorView(style: .large)
-        activityView.tintColor = .black
+        activityView.color = .white
         return activityView
     }()
     
diff --git a/Crafty Craft 5/Tab Bar/Server Tab/ServerDetailsViewController.swift b/Crafty Craft 5/Tab Bar/Server Tab/ServerDetailsViewController.swift
index 37cceed..94dbeb3 100644
--- a/Crafty Craft 5/Tab Bar/Server Tab/ServerDetailsViewController.swift	
+++ b/Crafty Craft 5/Tab Bar/Server Tab/ServerDetailsViewController.swift	
@@ -38,7 +38,7 @@ class ServerDetailsViewController: UIViewController {
     
     private lazy var loader = {
         let activityView = UIActivityIndicatorView(style: .large)
-        activityView.tintColor = .black
+        activityView.color = .white
         return activityView
     }()
     
-- 
2.37.0

